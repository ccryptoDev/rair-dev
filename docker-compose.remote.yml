version: '3.9'

services:
  rairnode:
    container_name: 'rairnode'
    build:
      context: rairnode
      dockerfile: Dockerfile
    volumes:
      - ./demo-decrypt-node/db:/usr/local/src/db
      - ./demo-decrypt-node/bin/Videos:/usr/local/src/bin/Videos
    environment:
      PRODUCTION: "true"
      MONGO_URI:  mongodb://${localdbuser}:${localdbpass}@mongo:27017/rair-db?authSource=${localdbuser}
      MONGO_URI_LOCAL: mongodb://${localdbuser}:${localdbpass}@mongo:27017/rair-db?authSource=${localdbuser}
      GENERATE_MONGO_URI_WITH_VAULT_CREDENTIAL_UTIL: ${generate_mongo_uri_with_vault_credential_util}
      MONGO_DB_HOSTNAME: ${mongo_db_hostname}
      MONGO_DB_NAME: ${mongo_db_name}
      PINATA_KEY: ${pinata_key}
      PINATA_SECRET: ${pinata_secret}
      ADMIN_NETWORK: ${admin_nft_chain}
      ADMIN_CONTRACT: ${admin_contract}
      INFURA_PROJECT_ID: ${infura_project_id}
      SERVICE_HOST: ${hostname}
      DEFAULT_PRODUCT_COVER: ${default_product_cover}
      GCP_PROJECT_ID: ${gcp_project_id}
      GCP_IMAGE_BUCKET_NAME: ${gcp_image_bucket_name}
      GCP_VIDEO_BUCKET_NAME: ${gcp_video_bucket_name}
      GCP_GATEWAY: ${gcp_gateway}
      GCP_CREDENTIALS: ${gcp_credentials}
      IPFS_SERVICE: ${ipfs_service}
      IPFS_GATEWAY: ${ipfs_gateway}
      IPFS_API: ${ipfs_api}
      PINATA_GATEWAY: ${pinata_gateway}
      MATIC_TESTNET_RPC: ${matic_testnet_rpc}
      MATIC_MAINNET_RPC: ${matic_mainnet_rpc}
      BINANCE_MAINNET_RPC: ${binance_mainnet_rpc}
      BINANCE_TESTNET_RPC: ${binance_testnet_rpc}
      ETHEREUM_MAINNET_RPC: ${ethereum_mainnet_rpc}
      ETHEREUM_TESTNET_GOERLI_RPC: ${ethereum_testnet_goerli_rpc}
      MONGO_LOG_COLLECTION: ${mongo_log_collection}
      LOG_LEVEL: ${log_level}
      REDIS_HOST: ${redisthhost}
      REDIS_PORT: ${redisport}
      SESSION_SECRET: ${session_secret}
      SESSION_TTL: ${session_ttl}
    ports:
      - 3000:3000
      - 5000:5000
    networks:
      - rair-local
  rair-redis:
    container_name: "rair-redis"
    image: redis
    command: redis-server --appendonly yes
    restart: always
    ports:
      - 6379:6379
    networks:
      - rair-local
  minting-network:
    container_name: minting-network
    build:
      context: minting-marketplace
      dockerfile: Dockerfile
    environment:
      REACT_APP_SENTRY_ENABLED: ${sentry_enabled}
      REACT_APP_SENTRY_IO_ENDPOINT: ${sentry_endpoint}
      REACT_APP_SENTRY_IO_TRACE_RATE: ${sentry_trace_rate}
      REACT_APP_SENTRY_RELEASE: ${sentry_release}
    ports:
      - 80:3001
    networks:
      - rair-local
networks:
  rair-local:
    driver: bridge
